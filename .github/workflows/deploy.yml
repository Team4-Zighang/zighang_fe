name: Deploy

on:
  push:
    branches: ['develop', 'main']
permissions:
  contents: write

concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  promote-and-deploy:
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.promote.outputs.changed }}
      new_sha: ${{ steps.promote.outputs.new_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Promote develop → main (fast-forward only)
        id: promote
        env:
          GH_USER_NAME: github-actions[bot]
          GH_USER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -euo pipefail
          git config user.name  "$GH_USER_NAME"
          git config user.email "$GH_USER_EMAIL"

          git fetch origin main develop

          BEFORE="$(git rev-parse origin/main)"
          git checkout -B main origin/main

          git merge --ff-only origin/develop

          AFTER="$(git rev-parse HEAD)"

          if [ "$BEFORE" = "$AFTER" ]; then
            echo "No changes to promote. main already up to date."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "new_sha=$AFTER" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          git push origin main
          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "new_sha=$AFTER" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: 'pnpm'

      - uses: pnpm/action-setup@v4
        with:
          version: 10           # 메시지상 pnpm-lock v9 → pnpm@10 권장
      - run: pnpm -v


      - name: Install Vercel CLI
        if: ${{ steps.promote.outputs.changed == 'true' }}
        run: npm i -g vercel@latest

      - name: Pull Vercel Env (production)
        if: ${{ steps.promote.outputs.changed == 'true' }}
        env:
          VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token='${{ secrets.VERCEL_TOKEN }}'

      - name: Build (prebuilt, prod)
        if: ${{ steps.promote.outputs.changed == 'true' }}
        run: vercel build --prod --token='${{ secrets.VERCEL_TOKEN }}'

      - name: Deploy (prod)
        if: ${{ steps.promote.outputs.changed == 'true' }}
        run: vercel deploy --prebuilt --prod --token='${{ secrets.VERCEL_TOKEN }}'

  deploy-on-main:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - run: pnpm -v

      - run: npm i -g vercel@latest
      - name: Pull Vercel Env (production)
        env:
          VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token='${{ secrets.VERCEL_TOKEN }}'
      - name: Build (prebuilt, prod)
        run: vercel build --prod --token='${{ secrets.VERCEL_TOKEN }}'
      - name: Deploy (prod)
        run: vercel deploy --prebuilt --prod --token='${{ secrets.VERCEL_TOKEN }}'
